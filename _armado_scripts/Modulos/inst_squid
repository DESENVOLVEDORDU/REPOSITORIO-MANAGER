#!/bin/bash
linha="\033[0m\e[34m================================="   
fun_bar () {
comando[0]="$1"
comando[1]="$2"
 (
[[ -e $HOME/fim ]] && rm $HOME/fim
${comando[0]} > /dev/null 2>&1
${comando[1]} > /dev/null 2>&1
touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "\033[1;33mAGUARDE \033[1;37m- \033[1;33m["
while true; do
   for((i=0; i<18; i++)); do
   echo -ne "\033[1;31m#"
   sleep 0.1s
   done
   [[ ! -e /usr/lib/ADMNETFREE ]] && rm -rf /bin/inst_squid/ > /dev/null 2>&1  
   [[ -e $HOME/fim ]] && rm $HOME/fim && break
   echo -e "\033[1;33m]"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "\033[1;33mAGUARDE \033[1;37m- \033[1;33m["
done
echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
tput cnorm
}

fun_ip () {
if [[ -e /etc/MEUIPADM ]]; then
IP="$(cat /etc/MEUIPADM)"
else
MEU_IP=$(ip addr | grep 'inet' | grep -v inet6 | grep -vE '127\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | grep -o -E '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | head -1)
MEU_IP2=$(wget -qO- ipv4.icanhazip.com)
[[ "$MEU_IP" != "$MEU_IP2" ]] && IP="$MEU_IP2" || IP="$MEU_IP"
echo "$MEU_IP2" > /etc/MEUIPADM
fi
}

#LISTA PORTAS
mportas () {
unset portas
portas_var=$(lsof -V -i tcp -P -n | grep -v "ESTABLISHED" |grep -v "COMMAND" | grep "LISTEN")
while read port; do
var1=$(echo $port | awk '{print $1}') && var2=$(echo $port | awk '{print $9}' | awk -F ":" '{print $2}')
[[ "$(echo -e $portas|grep "$var1 $var2")" ]] || portas+="$var1 $var2\n"
done <<< "$portas_var"
i=1
echo -e "$portas"
}
fun_squid  () {
  if [[ -e /etc/squid/squid.conf ]]; then
  var_squid="/etc/squid/squid.conf"
  elif [[ -e /etc/squid3/squid.conf ]]; then
  var_squid="/etc/squid3/squid.conf"
  fi
  [[ -e $var_squid ]] && {
   clear
   echo""
   echo -e "\033[1;31mREMOVENDO SQUID..."
   echo""
  service squid stop > /dev/null 2>&1
  service squid3 stop > /dev/null 2>&1
  fun_bar "apt-get remove squid3 -y"
   echo ""
   echo -e "\033[1;32mSQUID REMOVIDO COM SUCESSO !\033[0m"
  [[ -e $var_squid ]] && rm $var_squid
  sleep 2
  instalar
  exit
  }
  clear
echo ""
fun_ip
echo -e "$linha"
echo -e "\033[1;37m  INSTALADOR SQUID NEW ADM-VPS"
echo -e "$linha"
echo -ne "\033[1;32mCONFIRME SEU IP: \033[1;37m"; read -e -i $IP ip
echo ""
echo -e "\033[1;33mDEFINA AS PORTAS EM SEQUENCIA"
echo -e "\033[1;37mExemplo:\033[1;32m 80 8080 8799 3128"
echo ""
read -p "$(echo -e "\033[1;36mESCOLHA SUA PORTA \033[1;37m")" -e -i 80 portasx

totalporta=($portasx)
tput cuu1 && tput dl1
unset PORT
   for portx in $(echo $portasx); do
        [[ $(mportas|grep "${portx}") = "" ]] && {
        echo -e "\033[1;33mPorta Escolhida:\033[1;32m ${portx} OK"
        PORT+="${portx}\n"
        } || {
        echo -e "\033[1;33mPorta Escolhida:\033[1;31m ${portx} FALHA"
        }
   done
  [[ -z $PORT ]] && {
  echo -e "\033[1;31mVOCE NAO ESCOLHEU A PORTA!\033[0m"
  echo ""
  return 1
  }

echo""
echo -e "\033[1;37mINSTALANDO SQUID..."
echo""
fun_bar "apt-get install squid3 -y"
echo ""
echo -e "\033[1;32mINICIANDO CONFIGURACAO"
echo ""
unset var_squid
if [[ -d /etc/squid ]]; then
var_squid="/etc/squid/squid.conf"
elif [[ -d /etc/squid3 ]]; then
var_squid="/etc/squid3/squid.conf"
fi
echo -e ".claro.com.br/\n.vivo.com.br/" > /etc/payloads
echo -e "#ConfiguracaoSquiD
acl url1 dstdomain -i $ip
acl url2 dstdomain -i 127.0.0.1
acl url3 url_regex -i '/etc/payloads'
acl url4 url_regex -i '/etc/opendns'
acl url5 dstdomain -i localhost
acl all src 0.0.0.0/0
http_access allow url1
http_access allow url2
http_access allow url3
http_access allow url4
http_access allow url5
http_access deny all

#portas" > $var_squid
for pts in $(echo -e $PORT); do
echo -e "http_port $pts" >> $var_squid
done
echo -e "
#nome
visible_hostname NEW ADM-VPS

via off
forwarded_for off
pipeline_prefetch off" >> $var_squid

touch /etc/opendns
echo""
echo -e "\033[1;37mREINICIANDO SERVICOS..."
echo""
squid3 -k reconfigure > /dev/null 2>&1
service ssh restart > /dev/null 2>&1
service squid3 restart > /dev/null 2>&1
service squid restart > /dev/null 2>&1
echo -e "\033[1;33mSQUID CONFIGURADO"
echo""
#UFW
for ufww in $(mportas|awk '{print $2}'); do
ufw allow $ufww > /dev/null 2>&1
done
sleep 2
instalar
exit
}
online_squid () {
payload="/etc/payloads"
clear
echo -e "$linha"
echo -e "\033[01;37m     CONFIGURAÇÃO DO SQUID"
echo -e "$linha"
echo -e "\033[01;31m 0\033[01;36m -\033[01;37m [ MENU INICIAL ]"
echo -e "\033[01;31m 1\033[01;36m -\033[01;32m ADICIONAR HOST"
echo -e "\033[01;31m 2\033[01;36m -\033[01;32m REMOVER HOST"
echo -e "\033[01;31m 3\033[01;36m -\033[01;32m REMOVER SQUID "
echo -e "$linha"
while [[ $varpay != @(0|[1-3]) ]]; do
echo -ne "\033[1;37m OPÇÃO \033[01;31m0\033[01;36m-\033[01;31m3\033[1;37m:"; read varpay
tput cuu1 && tput dl1
done
if [[ "$varpay" = "0" ]]; then
instalar
exit
elif [[ "$varpay" = "1" ]]; then
clear
echo -e "$linha"
echo -e "\033[01;33m Hosts Atuais Dentro do Squid"
echo -e "$linha"
echo -ne "\033[01;37m"; cat $payload | awk -F "/" '{print $1,$2,$3,$4}'
while [[ $hos != \.* ]]; do
echo -e "$linha" 
echo -ne "\033[1;33m Digite o Novo Host: " && read hos
tput cuu1 && tput dl1
[[ $hos = \.* ]] && continue
echo -e "\033[01;33m Comece com\033[01;37m ."
sleep 2s
tput cuu1 && tput dl1
done
host="$hos/"
[[ -z $host ]] && return 1
[[ `grep -c "^$host" $payload` -eq 1 ]] && echo -e "\033[01;33m Host Ja Existe" && return 1
echo "$host" >> $payload && grep -v "^$" $payload > /tmp/a && mv /tmp/a $payload
clear
echo""
echo -ne "\033[01;37m"; cat $payload | awk -F "/" '{print $1,$2,$3,$4}'
echo""
echo -e "\033[1;32mHOST ADICIONADO COM SUCESSO"
echo""
sleep 1
if [[ ! -f "/etc/init.d/squid" ]]; then
service squid3 reload > /dev/null 2>&1
service squid3 restart > /dev/null 2>&1
inst_squid
exit
else
/etc/init.d/squid reload > /dev/null 2>&1
service squid restart > /dev/null 2>&1
inst_squid
exit
fi	
return 0
elif [[ "$varpay" = "2" ]]; then
clear
echo -e "$linha"
echo -e "\033[01;33m Hosts Atuais Dentro do Squid"
echo -e "$linha"
echo -ne "\033[01;37m"; cat $payload | awk -F "/" '{print $1,$2,$3,$4}'
while [[ $hos != \.* ]]; do
echo -e "$linha" 
echo -ne "\033[1;33m Digite Host Para remover: " && read hos
tput cuu1 && tput dl1
[[ $hos = \.* ]] && continue
echo -e "\033[01;33m Comece com\033[01;37m ."
sleep 2s
tput cuu1 && tput dl1
done
host="$hos/"
[[ -z $host ]] && return 1
[[ `grep -c "^$host" $payload` -ne 1 ]] && echo -e "\033[01;31m Host Nao Encontrado"  && return 1
grep -v "^$host" $payload > /tmp/a && mv /tmp/a $payload
clear
echo""
echo -ne "\033[01;37m"; cat $payload | awk -F "/" '{print $1,$2,$3,$4}'
echo""
echo -e "\033[1;31mHOST REMOVIDO COM SUCESSO!"
sleep 1
echo""
if [[ ! -f "/etc/init.d/squid" ]]; then
service squid3 reload > /dev/null 2>&1
service squid3 restart > /dev/null 2>&1
inst_squid
exit
else
/etc/init.d/squid reload > /dev/null 2>&1
service squid restart > /dev/null 2>&1
inst_squid
exit
fi	
return 0
elif [[ "$varpay" = "3" ]]; then
fun_squid
exit
fi
}
if [[ -e /etc/squid/squid.conf ]]; then
online_squid
elif [[ -e /etc/squid3/squid.conf ]]; then
online_squid
else
fun_squid
exit
fi 