#!/bin/bash

fun_bar () {
comando[0]="$1"
comando[1]="$2"
 (
[[ -e $HOME/fim ]] && rm $HOME/fim
${comando[0]} > /dev/null 2>&1
${comando[1]} > /dev/null 2>&1
touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "\033[1;33mAGUARDE \033[1;37m- \033[1;33m["
while true; do
   for((i=0; i<18; i++)); do
   echo -ne "\033[1;31m#"
   sleep 0.1s
   done
   [[ ! -e /usr/lib/ADMNETFREE ]] && rm -rf /bin/inst_shadowsocks > /dev/null 2>&1  
   [[ -e $HOME/fim ]] && rm $HOME/fim && break
   echo -e "\033[1;33m]"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "\033[1;33mAGUARDE \033[1;37m- \033[1;33m["
done
echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
tput cnorm
}

mportas () {
unset portas
portas_var=$(lsof -V -i tcp -P -n | grep -v "ESTABLISHED" |grep -v "COMMAND" | grep "LISTEN")
while read port; do
var1=$(echo $port | awk '{print $1}') && var2=$(echo $port | awk '{print $9}' | awk -F ":" '{print $2}')
[[ "$(echo -e $portas|grep "$var1 $var2")" ]] || portas+="$var1 $var2\n"
done <<< "$portas_var"
i=1
echo -e "$portas"
}

fun_shadowsocks () {
[[ -e /etc/shadowsocks.json ]] && {
[[ $(ps x|grep ssserver|grep -v grep|awk '{print $1}') != "" ]] && kill -9 $(ps x|grep ssserver|grep -v grep|awk '{print $1}') > /dev/null 2>&1 && ssserver -c /etc/shadowsocks.json -d stop > /dev/null 2>&1
clear
echo""
echo -e "\033[1;31mSHADOWSOCKS PARADO COM SUCESSO!"
sleep 2
echo""
rm /etc/shadowsocks.json
sleep 2
echo ""  
instalar
exit
}
       clear
       echo""
       echo -e "\033[1;37mINSTALADOR SHADOWSOCKS NEW ADM-VPS"
       echo""
       while true; do
       echo -e "\033[1;33mSELECIONE UMA CRIPITOGRAFIA"
       encript=(aes-256-gcm aes-192-gcm aes-128-gcm aes-256-ctr aes-192-ctr aes-128-ctr aes-256-cfb aes-192-cfb aes-128-cfb camellia-128-cfb camellia-192-cfb camellia-256-cfb chacha20-ietf-poly1305 chacha20-ietf chacha20 rc4-md5)
       for((s=0; s<${#encript[@]}; s++)); do
       	echo -e "\033[1;32m [${s}]\033[1;33m - ${encript[${s}]}"
       done
       while true; do
       unset cript
       read -p "$(echo -e "\033[1;36mESCOLHA UMA OPCAO : \033[1;37m")" -e -i 0 cript
       [[ ${encript[$cript]} ]] && break
       echo""
       echo -e "\033[1;31mOpcao Invalida"
       done
       encriptacao="${encript[$cript]}"
       [[ ${encriptacao} != "" ]] && break
       echo -e "\033[1;31mOpcao Invalida"
      done
#ESCOLHENDO LISTEN
echo""
      while true; do
      unset Lport
      read -p "$(echo -e "\033[1;33mQUAL PORTA DESEJA UTILIZAR : \033[1;37m")" Lport
      [[ $(mportas|grep "$Lport") = "" ]] && break
      echo -e "\033[1;31m${Lport}: Porta Invalida"
      done
#INICIANDO
read -p "$(echo -e "\033[1;33mSENHA PARA O SHADOWSOCKS : \033[1;37m")" Pass
echo""
echo -e "\033[1;36mINSTALANDO O SHADOWSOCKS"
fun_bar 'sudo apt-get install shadowsocks -y'
fun_bar 'sudo apt-get install libsodium-dev -y'
fun_bar 'sudo apt-get install python-pip -y'
fun_bar 'sudo pip install --upgrade setuptools'
fun_bar 'pip install --upgrade pip -y'
fun_bar 'pip install https://github.com/shadowsocks/shadowsocks/archive/master.zip -U'
echo -ne '{\n"server":"' > /etc/shadowsocks.json
echo -ne "0.0.0.0" >> /etc/shadowsocks.json
echo -ne '",\n"server_port":' >> /etc/shadowsocks.json
echo -ne "${Lport},\n" >> /etc/shadowsocks.json
echo -ne '"local_port":1080,\n"password":"' >> /etc/shadowsocks.json
echo -ne "${Pass}" >> /etc/shadowsocks.json
echo -ne '",\n"timeout":600,\n"method":"' >> /etc/shadowsocks.json
echo -ne "${encriptacao}" >> /etc/shadowsocks.json
echo -ne '"\n}' >> /etc/shadowsocks.json
ssserver -c /etc/shadowsocks.json -d start > /dev/null 2>&1
value=$(ps x |grep ssserver|grep -v grep)
[[ $value != "" ]] && value="\033[1;32mINICIADO COM SUCESSO" || value="\033[1;31mERRO"
echo""
echo -e "\033[1;33m${value} "
echo""
sleep 2
echo ""  
instalar
exit
}
fun_shadowsocks